tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


metadata:
  template_name: VisionTopology
  template_version: 0.1.0-SNAPSHOT
  template_author: yorc

description: >
  A topology used to deploy a Google Cloud Vision API client

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.0.0
  - org.ystia.yorc.samples.vision.linux.ansible:1.0.0-SNAPSHOT

topology_template:
  inputs:
    project_id:
      type: string
      required: true
      description: "Google Cloud Project hosting the Cloud Storage buckets where images to analyze will be uploaded"
    subscription_id:
      type: string
      required: true
      description: "Google Cloud Pub/Sub subscription identifier used to be notified of images uploads"
    output_bucket_name:
      type: string
      required: true
      description: "Name of the Google Cloud Storage bucket where to store detection results"
    api_keys_file:
      type: string
      required: true
      description: "Path to a Google Cloud API keys file providing credentials needed to use the API"
  node_templates:
    ComputeInstance:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    ImageDetection:
      type: org.ystia.yorc.samples.vision.linux.ansible.nodes.Detector
      properties:
        project_id: { get_input: project_id }
        subscription_id: { get_input: subscription_id }
        output_bucket_name: { get_input: output_bucket_name }
        api_keys_file: { get_input: api_keys_file }
      requirements:
        - hostedOnComputeInstance:
            type_requirement: host
            node: ComputeInstance
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
