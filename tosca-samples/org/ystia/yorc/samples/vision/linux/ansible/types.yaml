tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


metadata:
  template_name: org.ystia.yorc.samples.vision.linux.ansible
  template_version: 1.0.0-SNAPSHOT
  template_author: yorc

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.1.0

description: >
  This component allows to deploy an application using Google Cloud Vision API
  to perform detections on images uploaded to Google Cloud Storage

node_types:
  org.ystia.yorc.samples.vision.linux.ansible.nodes.Detector:
    derived_from: tosca.nodes.SoftwareComponent
    description: GCP Vision API client
    tags:
      icon: /images/detector-icon.png
    properties:
      project_id:
        type: string
        description: >
          Google Cloud Project hosting the Cloud Storage buckets where images
          to analyze will be uploaded 
      api_keys_file:
        type: string
        description: >
          Path to a Google Cloud API keys file providing credentials needed to use the API 
      subscription_id:
        type: string
        description: >
          Google Cloud Pub/Sub subscription identifier used to be notified
          of images uploads
      output_bucket_name:
        type: string
        description: >
          Name of the Google Cloud Storage bucket where to store detection results
    interfaces:
      Standard:
        create:
          description: Detector installation step
          inputs:
            PROJECT_ID: { get_property: [SELF, project_id] }
            API_KEYS_FILE: { get_property: [SELF, api_keys_file] }
            SUBSCRIPTION_ID: { get_property: [SELF, subscription_id] }
            OUTPUT_BUCKET_NAME: { get_property: [SELF, output_bucket_name] }
          implementation: playbooks/detector_install.yaml
        start:
          implementation: playbooks/detector_start.yaml
        stop:
          implementation: playbooks/detector_stop.yaml
