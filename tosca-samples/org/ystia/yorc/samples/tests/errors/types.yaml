tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2018 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


metadata:
  template_name: org.ystia.yorc.samples.tests.errors
  template_version: 1.0.0-SNAPSHOT
  template_author: yorc

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.1.0

node_types:
  org.ystia.yorc.samples.test.ErrorComponent:
    description: |
      This component could be configured to failed during its create or start operation.
      This is used to test Yorc capability to return accurate error messages.
      By default it do not fail at all. The failing behavior is controlled by boolean properties.
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      failOnCreate:
        description: "Should the create operation implemented in bash fail?"
        type: boolean
        required: false
        default: false
      failOnStart:
        description: "Should the start operation implemented with an Ansible playbook fail?"
        type: boolean
        required: false
        default: false
      failOnStop:
        description: "Should the stop operation implemented with an Ansible playbook fail?"
        type: boolean
        required: false
        default: false
    interfaces:
      Standard:
        create:
          inputs:
            SHOULD_FAIL: { get_property: [SELF, failOnCreate] }
          implementation: implementation/create.sh
        start:
          inputs:
            SHOULD_FAIL: { get_property: [SELF, failOnStart] }
          implementation: implementation/start.yaml
        stop:
          inputs:
            SHOULD_FAIL: { get_property: [SELF, failOnStop] }
          implementation: implementation/stop.yaml
